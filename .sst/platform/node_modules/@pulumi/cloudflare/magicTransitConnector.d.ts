import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleMagicTransitConnector = new cloudflare.MagicTransitConnector("example_magic_transit_connector", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     connectorId: "connector_id",
 *     activated: true,
 *     interruptWindowDurationHours: 0,
 *     interruptWindowHourOfDay: 0,
 *     notes: "notes",
 *     timezone: "timezone",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/magicTransitConnector:MagicTransitConnector example '<account_id>/<connector_id>'
 * ```
 */
export declare class MagicTransitConnector extends pulumi.CustomResource {
    /**
     * Get an existing MagicTransitConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MagicTransitConnectorState, opts?: pulumi.CustomResourceOptions): MagicTransitConnector;
    /**
     * Returns true if the given object is an instance of MagicTransitConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MagicTransitConnector;
    readonly accountId: pulumi.Output<string>;
    readonly activated: pulumi.Output<boolean | undefined>;
    readonly connectorId: pulumi.Output<string>;
    readonly device: pulumi.Output<outputs.MagicTransitConnectorDevice>;
    readonly interruptWindowDurationHours: pulumi.Output<number | undefined>;
    readonly interruptWindowHourOfDay: pulumi.Output<number | undefined>;
    readonly lastHeartbeat: pulumi.Output<string>;
    readonly lastSeenVersion: pulumi.Output<string>;
    readonly lastUpdated: pulumi.Output<string>;
    readonly notes: pulumi.Output<string | undefined>;
    readonly timezone: pulumi.Output<string | undefined>;
    /**
     * Create a MagicTransitConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MagicTransitConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MagicTransitConnector resources.
 */
export interface MagicTransitConnectorState {
    accountId?: pulumi.Input<string>;
    activated?: pulumi.Input<boolean>;
    connectorId?: pulumi.Input<string>;
    device?: pulumi.Input<inputs.MagicTransitConnectorDevice>;
    interruptWindowDurationHours?: pulumi.Input<number>;
    interruptWindowHourOfDay?: pulumi.Input<number>;
    lastHeartbeat?: pulumi.Input<string>;
    lastSeenVersion?: pulumi.Input<string>;
    lastUpdated?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MagicTransitConnector resource.
 */
export interface MagicTransitConnectorArgs {
    accountId: pulumi.Input<string>;
    activated?: pulumi.Input<boolean>;
    connectorId: pulumi.Input<string>;
    interruptWindowDurationHours?: pulumi.Input<number>;
    interruptWindowHourOfDay?: pulumi.Input<number>;
    notes?: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}
