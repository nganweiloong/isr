import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 */
export declare class SnippetRules extends pulumi.CustomResource {
    /**
     * Get an existing SnippetRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnippetRulesState, opts?: pulumi.CustomResourceOptions): SnippetRules;
    /**
     * Returns true if the given object is an instance of SnippetRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is SnippetRules;
    readonly description: pulumi.Output<string>;
    readonly enabled: pulumi.Output<boolean>;
    readonly expression: pulumi.Output<string>;
    /**
     * List of snippet rules
     */
    readonly rules: pulumi.Output<outputs.SnippetRulesRule[] | undefined>;
    /**
     * Snippet identifying name
     */
    readonly snippetName: pulumi.Output<string>;
    /**
     * Identifier
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a SnippetRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnippetRulesArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering SnippetRules resources.
 */
export interface SnippetRulesState {
    description?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    expression?: pulumi.Input<string>;
    /**
     * List of snippet rules
     */
    rules?: pulumi.Input<pulumi.Input<inputs.SnippetRulesRule>[]>;
    /**
     * Snippet identifying name
     */
    snippetName?: pulumi.Input<string>;
    /**
     * Identifier
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a SnippetRules resource.
 */
export interface SnippetRulesArgs {
    /**
     * List of snippet rules
     */
    rules?: pulumi.Input<pulumi.Input<inputs.SnippetRulesRule>[]>;
    /**
     * Identifier
     */
    zoneId: pulumi.Input<string>;
}
