"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.MagicTransitConnector = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleMagicTransitConnector = new cloudflare.MagicTransitConnector("example_magic_transit_connector", {
 *     accountId: "023e105f4ecef8ad9ca31a8372d0c353",
 *     connectorId: "connector_id",
 *     activated: true,
 *     interruptWindowDurationHours: 0,
 *     interruptWindowHourOfDay: 0,
 *     notes: "notes",
 *     timezone: "timezone",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/magicTransitConnector:MagicTransitConnector example '<account_id>/<connector_id>'
 * ```
 */
class MagicTransitConnector extends pulumi.CustomResource {
    /**
     * Get an existing MagicTransitConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new MagicTransitConnector(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of MagicTransitConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MagicTransitConnector.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["activated"] = state ? state.activated : undefined;
            resourceInputs["connectorId"] = state ? state.connectorId : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["interruptWindowDurationHours"] = state ? state.interruptWindowDurationHours : undefined;
            resourceInputs["interruptWindowHourOfDay"] = state ? state.interruptWindowHourOfDay : undefined;
            resourceInputs["lastHeartbeat"] = state ? state.lastHeartbeat : undefined;
            resourceInputs["lastSeenVersion"] = state ? state.lastSeenVersion : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["notes"] = state ? state.notes : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.connectorId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectorId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["activated"] = args ? args.activated : undefined;
            resourceInputs["connectorId"] = args ? args.connectorId : undefined;
            resourceInputs["interruptWindowDurationHours"] = args ? args.interruptWindowDurationHours : undefined;
            resourceInputs["interruptWindowHourOfDay"] = args ? args.interruptWindowHourOfDay : undefined;
            resourceInputs["notes"] = args ? args.notes : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["device"] = undefined /*out*/;
            resourceInputs["lastHeartbeat"] = undefined /*out*/;
            resourceInputs["lastSeenVersion"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MagicTransitConnector.__pulumiType, name, resourceInputs, opts);
    }
}
exports.MagicTransitConnector = MagicTransitConnector;
/** @internal */
MagicTransitConnector.__pulumiType = 'cloudflare:index/magicTransitConnector:MagicTransitConnector';
//# sourceMappingURL=magicTransitConnector.js.map