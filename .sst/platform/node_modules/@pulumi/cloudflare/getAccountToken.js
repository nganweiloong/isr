"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAccountTokenOutput = exports.getAccountToken = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountToken = cloudflare.getAccountToken({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 *     tokenId: "ed17574386854bf78a67040be0a770b0",
 * });
 * ```
 */
function getAccountToken(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("cloudflare:index/getAccountToken:getAccountToken", {
        "accountId": args.accountId,
        "filter": args.filter,
        "tokenId": args.tokenId,
    }, opts);
}
exports.getAccountToken = getAccountToken;
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const exampleAccountToken = cloudflare.getAccountToken({
 *     accountId: "eb78d65290b24279ba6f44721b3ea3c4",
 *     tokenId: "ed17574386854bf78a67040be0a770b0",
 * });
 * ```
 */
function getAccountTokenOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("cloudflare:index/getAccountToken:getAccountToken", {
        "accountId": args.accountId,
        "filter": args.filter,
        "tokenId": args.tokenId,
    }, opts);
}
exports.getAccountTokenOutput = getAccountTokenOutput;
//# sourceMappingURL=getAccountToken.js.map